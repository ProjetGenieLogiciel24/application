#:kivy 2.0.0

# Définir le gestionnaire d'écrans
ScreenManager:
    # Ajouter les écrans de l'application
    AccueilScreen:
    DevisScreen:
    ResultatScreen:

# Définir l'écran d'accueil
<AccueilScreen>:
    name: "accueil"
    # Ajouter une image de fond
    canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "image.jpg"
	# Ajouter un titre avec la propriété text_size
	Label:
 	   text: "\nBienvenue sur l'application de génération de devis de construction de maison.\n"
	    font_size: root.width * 0.05
 	   pos_hint: {"x": 0, "top": 1}
	    size_hint: 1, None  # Définir une taille fixe
	    height: self.texture_size[1] # Ajuster automatiquement la hauteur en fonction de la taille du texte
  	  color: 0, 0, 1
    	text_size: self.width, None  # Définir la zone de texte en fonction de la largeur de l'élément
    	halign: 'center'  # Centrer le texte horizontalement
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 1
            Line:
                width: root.width * 0.005
                rectangle: self.x, self.y, self.width, self.height
    # Ajouter un bouton pour accéder à l'écran de devis
    Button:
        text: "Commencer le devis"
        font_size: root.width * 0.05
        pos_hint: {"center_x": 0.5, "center_y": 0.5}
        size_hint: 0.5, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
        # Lier le bouton à la fonction on_press_accueil
        on_press: root.on_press_accueil()

# Définir l'écran de devis
<DevisScreen>:
    name: "devis"
    # Ajouter une image de fond
    canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "image.jpg"
    # Ajouter un titre
    Label:
        id: devis
        text: "\nVeuillez renseigner les informations suivantes pour générer votre devis\n"
        font_size: root.width * 0.05
 	   pos_hint: {"x": 0, "top": 1}
	    size_hint: 1, None  # Définir une taille fixe
	    height: self.texture_size[1]  # Ajuster automatiquement la hauteur en fonction de la taille du texte
  	  color: 0, 0, 1
    	text_size: self.width, None  # Définir la zone de texte en fonction de la largeur de l'élément
    	halign: 'center'  # Centrer le texte horizontalement
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 1
            Line:
                width: root.width * 0.005
                rectangle: self.x, self.y, self.width, self.height
    # Ajouter un champ de saisie pour le nom du client
    TextInput:
        id: nom
        hint_text: "Nom du client"
        font_size: root.width * 0.05
        pos_hint: {"x": 0.1, "top": 0.8}
        size_hint: 0.8, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
    # Ajouter un champ de saisie pour l'adresse du client
    TextInput:
        id: adresse
        hint_text: "Adresse du client"
        font_size: root.width * 0.05
        pos_hint: {"x": 0.1, "top": 0.7}
        size_hint: 0.8, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
    # Ajouter une liste déroulante pour le type de maison
    Spinner:
        id: type
        text: "Type de maison"
        values: ("Plain-pied", "A étage", "Sous-sol")
        font_size: root.width * 0.05
        pos_hint: {"x": 0.1, "top": 0.6}
        size_hint: 0.8, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
    # Ajouter un champ de saisie pour la surface de la maison
    TextInput:
        id: surface
        hint_text: "Surface de la maison (en m2)"
        font_size: root.width * 0.05
        pos_hint: {"x": 0.1, "top": 0.5}
        size_hint: 0.8, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
    # Ajouter un bouton pour valider le devis
    Button:
        text: "Valider le devis"
        font_size: root.width * 0.05
        pos_hint: {"center_x": 0.5, "center_y": 0.2}
        size_hint: 0.5, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
        # Lier le bouton à la fonction on_press_devis
        on_press: root.on_press_devis()

# Définir l'écran de résultat
<ResultatScreen>:
    name: "resultat"
    # Ajouter une image de fond
    canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "image.jpg"
    # Ajouter un titre
    Label:
        text: "\nVoici le devis de construction de votre maison\n"
        font_size: root.width * 0.05
 	   pos_hint: {"x": 0, "top": 1}
	    size_hint: 1, None  # Définir une taille fixe
	    height: self.texture_size[1]  # Ajuster automatiquement la hauteur en fonction de la taille du texte
  	  color: 0, 0, 1
    	text_size: self.width, None  # Définir la zone de texte en fonction de la largeur de l'élément
    	halign: 'center'  # Centrer le texte horizontalement
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 1
            Line:
                width: root.width * 0.005
                rectangle: self.x, self.y, self.width, self.height
	# Ajouter un texte pour afficher le résultat
	Label:
	    id: resultat
 	   text: ""
	    font_size: root.width * 0.05
	    pos_hint: {"x": 0.1, "top": 0.8}
	    size_hint: 0.8, 0.6
   	 color: 0, 0, 1
  	  text_size: self.width, None  # Ajuster la zone de texte en fonction de la largeur de l'élément
	    
    # Ajouter un bouton pour revenir à l'écran d'accueil
    Button:
        text: "Retour à l'accueil"
        font_size: root.width * 0.05
        pos_hint: {"center_x": 0.5, "center_y": 0.1}
        size_hint: 0.5, 0.1
        # Ajouter un effet de bordure
        canvas.before:
            Color:
                rgb: 0, 0, 0
            Line:
                width: 2
                rectangle: self.x, self.y, self.width, self.height
        # Lier le bouton à la fonction on_press_resultat
        on_press: root.on_press_resultat()
